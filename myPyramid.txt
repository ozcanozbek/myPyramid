//O2can O2bek (Özcan Özbek)
//@version=5
indicator(title='Piramid - V1.4.2', shorttitle='Piramid', overlay=true, timeframe="")


//aç kapa

acUA = input(defval = false, title = 'Üst Alt Çizgiler')   

acEwWma = input(defval = true, title = 'Ema9 Wma30 Göstergeleri')   
acEwAlSat = input(defval = false, title = 'EW AL-SAT')   

acFibDivAlSat = input(defval = false, title = 'Fib Div AL-SAT')   

acFibo = input(defval = false, title='Fibo Fband Çizgileri')
acFiboDetayAlSat = input(defval = false, title = 'Fibo Fband AL-SAT')   

acFiboLines = input(defval = false, title = 'Fib Yatay Çizgileri')   
acFibAlSat = input(defval = false, title = 'Fib Yatay Çizgi AL-SAT')   

acTema = input(defval = false, title = 'Tema Çizgileri')   
acTemaAlSat = input(defval = false, title = 'Tema AL-SAT')   

acT3 = input(defval = false, title = 'T3 - Tillson Çizgisi')  
acT3AlSat = input(defval = false, title = 'T3 - Tillson AL-SAT')  

acTSL = input(defval = false, title = 'TSL')   


src = close //input(close, title='Source')
length1 = 3 //input(3, 'T3 Length')
a1 = 0.5 //input(0.5, 'Volume Factor')


//DC
lenUA = 40
ustUA = ta.highest(lenUA)
altUA = ta.lowest(lenUA)
uUA = plot(ustUA and acUA ? ustUA : na, "Üst Çizgi", color=color.yellow, linewidth=2)
aUA = plot(altUA and acUA ? altUA : na, "Alt Çizgi", color=color.green, linewidth=2)
//fill(u, l, color=color.rgb(33, 150, 243, 95), title="Background")

//FBANDS
EMAperiod = input.int(14, title='EMAperiod', minval=1, maxval=500)
ATRperiod = input.int(14, title='ATRperiod', minval=1, maxval=500)
EMA = ta.ema(close, EMAperiod)
TR1 = math.max(high - low, math.abs(high - close[1]))
TR = math.max(TR1, math.abs(low - close[1]))
ATR = ta.sma(TR, ATRperiod)
F2 = input(defval=1.618, title='Fibonacci Ratio 2')
F3 = input(defval=2.618, title='Fibonacci Ratio 3')
F4 = input(defval=4.236, title='Fibonacci Ratio 4')
R1 = ATR
R2 = ATR * F2
R3 = ATR * F3
R4 = ATR * F4
FIBOTOP4 = EMA + R4
FIBOTOP3 = EMA + R3
FIBOTOP2 = EMA + R2
FIBOTOP1 = EMA + R1
FIBOBOT1 = EMA - R1
FIBOBOT2 = EMA - R2
FIBOBOT3 = EMA - R3
FIBOBOT4 = EMA - R4

plot(FIBOTOP4 and acFibo ? FIBOTOP4 : na, title='Fibo Band Üst-4', linewidth=1, color=color.new(color.white, 0))
plot(FIBOTOP3 and acFibo ? FIBOTOP3 : na, title='Fibo Band Üst-3', linewidth=1, color=color.new(color.lime, 0))
plot(FIBOTOP2 and acFibo ? FIBOTOP2 : na, title='Fibo Band Üst-2', linewidth=1, color=color.new(color.orange, 0))
plot(FIBOTOP1 and acFibo ? FIBOTOP1 : na, title='Fibo Band Üst-1', linewidth=1, color=color.new(color.yellow, 0))
plot(FIBOBOT1 and acFibo ? FIBOBOT1 : na, title='Fibo Band Alt-1', linewidth=1, color=color.new(color.yellow, 0))
plot(FIBOBOT2 and acFibo ? FIBOBOT2 : na, title='Fibo Band Alt-2', linewidth=1, color=color.new(color.orange, 0))
plot(FIBOBOT3 and acFibo ? FIBOBOT3 : na, title='Fibo Band Alt-3', linewidth=1, color=color.new(color.lime, 0))
plot(FIBOBOT4 and acFibo ? FIBOBOT4 : na, title='Fibo Band -4', linewidth=1, color=color.new(color.white, 0))

myFiboKosul1 = ta.crossover(close, FIBOTOP4)
myFiboKosul2 = ta.crossover(close, FIBOTOP3)
myFiboKosul3 = ta.crossover(close, FIBOTOP2)
myFiboKosul4 = ta.crossover(close, FIBOTOP1)
myFiboKosul5 = ta.crossover(close, FIBOBOT1)
myFiboKosul6 = ta.crossover(close, FIBOBOT2)
myFiboKosul7 = ta.crossover(close, FIBOBOT3)
myFiboKosul8 = ta.crossover(close, FIBOBOT4)


myFiboKosul1a = ta.crossunder(close, FIBOTOP4)
myFiboKosul2a = ta.crossunder(close, FIBOTOP3)
myFiboKosul3a = ta.crossunder(close, FIBOTOP2)
myFiboKosul4a = ta.crossunder(close, FIBOTOP1)
myFiboKosul5a = ta.crossunder(close, FIBOBOT1)
myFiboKosul6a = ta.crossunder(close, FIBOBOT2)
myFiboKosul7a = ta.crossunder(close, FIBOBOT3)
myFiboKosul8a = ta.crossunder(close, FIBOBOT4)


myFiboKosulu = myFiboKosul1 or myFiboKosul2 or myFiboKosul3 or myFiboKosul4 or myFiboKosul5 or myFiboKosul6 or myFiboKosul7 or myFiboKosul8 
alertcondition(myFiboKosulu, title="Fibo Fband AL", message='Fibo Fband AL {{ticker}}, FİYAT={{close}}')

myFiboKosula = myFiboKosul1a or myFiboKosul2a or myFiboKosul3a or myFiboKosul4a or myFiboKosul5a or myFiboKosul6a or myFiboKosul7a or myFiboKosul8a 
alertcondition(myFiboKosula, title="Fibo Fband SAT", message='Fibo Fband SAT {{ticker}}, FİYAT={{close}}')

//TSL
resTsl = timeframe.period
K1 = ta.valuewhen(low > low[1], low[1], 1)
TSL = request.security(syminfo.tickerid, resTsl, K1)


//Tillson
e1 = ta.ema((high + low + 2 * close) / 4, length1)
e2 = ta.ema(e1, length1)
e3 = ta.ema(e2, length1)
e4 = ta.ema(e3, length1)
e5 = ta.ema(e4, length1)
e6 = ta.ema(e5, length1)
c1 = -a1 * a1 * a1
c2 = 3 * a1 * a1 + 3 * a1 * a1 * a1
c3 = -6 * a1 * a1 - 3 * a1 - 3 * a1 * a1 * a1
c4 = 1 + 3 * a1 + a1 * a1 * a1 + 3 * a1 * a1
T3 = c1 * e6 + c2 * e5 + c3 * e4 + c4 * e3

col1 = T3 > T3[1]
col3 = T3 < T3[1]
color_1 = col1 ? color.lime : col3 ? color.red : color.yellow

alertcondition(ta.cross(T3, T3[1]) and col1, title="T3 AL", message='T3 AL {{ticker}}, FİYAT={{close}}')
alertcondition(ta.cross(T3, T3[1]) and col3, title="T3 SAT", message='T3 SAT {{ticker}}, FİYAT={{close}}')

plotshape(ta.cross(T3, T3[1]) and col1 and acT3AlSat ,title ='T3 AL', text='T3', style=shape.triangleup, location=location.belowbar, color=color.new(color.lime, 0), offset=-1, size=size.small)
plotshape(ta.cross(T3, T3[1]) and col3 and acT3AlSat ,title ='T3 SAT', text='T3', style=shape.triangledown, location=location.abovebar, color=color.new(color.red, 0), offset=-1, size=size.small)



//O2 TEMA 4x
length0 = 20 //input.int(20, minval=1)
e11 = ta.ema(src, length0)
e12 = ta.ema(e11, length0)
e13 = ta.ema(e12, length0)
dema1 = 3 * (e11 - e12) + e13  //tema20
plot(dema1 and acTema ? dema1 : na, 'Tema 20', color=color.new(color.white, 0), linewidth=2)

length2 = 50 //input.int(50, minval=1)
e21 = ta.ema(src, length2)
e22 = ta.ema(e21, length2)
e23 = ta.ema(e22, length2)
dema2 = 3 * (e21 - e22) + e23  //tema50 
plot(dema2 and acTema ? dema2 : na, 'Tema 50', color=color.new(color.yellow, 0), linewidth=3)

length3 = 100 //input.int(100, minval=1)
e31 = ta.ema(src, length3)
e32 = ta.ema(e31, length3)
e33 = ta.ema(e32, length3)
dema3 = 3 * (e31 - e32) + e33    //tema100
plot(dema3 and acTema ? dema3 : na, 'Tema 100', color=color.new(color.blue, 0), linewidth=3)

length4 = 200 //input.int(200, minval=1)
e41 = ta.ema(src, length4)
e42 = ta.ema(e41, length4)
e43 = ta.ema(e42, length4)
dema4 = 3 * (e41 - e42) + e43    //tema200
plot(dema4 and acTema ? dema4 : na, 'Tema 200', color=color.new(#be660b, 0), linewidth=4)

//FibDiv
source = src
long_term_div = input(true, title='Use long term divergences?')
div_lookback_period = input.int(55, minval=1, title='Lookback Period')
fastLength = input.int(12, minval=1, title='PPO Fast')
slowLength = input.int(26, minval=1, title='PPO Slow')
signalLength = input.int(9, minval=1, title='PPO Signal')
smoother = input.int(2, minval=1, title='PPO Smooth')
fastMA = ta.ema(source, fastLength)
slowMA = ta.ema(source, slowLength)
macd = fastMA - slowMA
macd2 = macd / slowMA * 100
d = ta.sma(macd2, smoother)  // smoothing PPO

bullishPrice = low

priceMins = bullishPrice > bullishPrice[1] and bullishPrice[1] < bullishPrice[2] or low[1] == low[2] and low[1] < low and low[1] < low[3] or low[1] == low[2] and low[1] == low[3] and low[1] < low and low[1] < low[4] or low[1] == low[2] and low[1] == low[3] and low[1] and low[1] == low[4] and low[1] < low and low[1] < low[5]  // this line identifies bottoms and plateaus in the price
oscMins = d > d[1] and d[1] < d[2]  // this line identifies bottoms in the PPO

BottomPointsInPPO = oscMins

bearishPrice = high
priceMax = bearishPrice < bearishPrice[1] and bearishPrice[1] > bearishPrice[2] or high[1] == high[2] and high[1] > high and high[1] > high[3] or high[1] == high[2] and high[1] == high[3] and high[1] > high and high[1] > high[4] or high[1] == high[2] and high[1] == high[3] and high[1] and high[1] == high[4] and high[1] > high and high[1] > high[5]  // this line identifies tops in the price
oscMax = d < d[1] and d[1] > d[2]  // this line identifies tops in the PPO

TopPointsInPPO = oscMax

currenttrough4 = ta.valuewhen(oscMins, d[1], 0)  // identifies the value of PPO at the most recent BOTTOM in the PPO
lasttrough4 = ta.valuewhen(oscMins, d[1], 1)  // NOT USED identifies the value of PPO at the second most recent BOTTOM in the PPO
currenttrough5 = ta.valuewhen(oscMax, d[1], 0)  // identifies the value of PPO at the most recent TOP in the PPO
lasttrough5 = ta.valuewhen(oscMax, d[1], 1)  // NOT USED identifies the value of PPO at the second most recent TOP in the PPO

currenttrough6 = ta.valuewhen(priceMins, low[1], 0)  // this line identifies the low (price) at the most recent bottom in the Price
lasttrough6 = ta.valuewhen(priceMins, low[1], 1)  // NOT USED this line identifies the low (price) at the second most recent bottom in the Price
currenttrough7 = ta.valuewhen(priceMax, high[1], 0)  // this line identifies the high (price) at the most recent top in the Price
lasttrough7 = ta.valuewhen(priceMax, high[1], 1)  // NOT USED this line identifies the high (price) at the second most recent top in the Price

delayedlow = priceMins and ta.barssince(oscMins) < 3 ? low[1] : na
delayedhigh = priceMax and ta.barssince(oscMax) < 3 ? high[1] : na

// only take tops/bottoms in price when tops/bottoms are less than 5 bars away
filter = ta.barssince(priceMins) < 5 ? ta.lowest(currenttrough6, 4) : na
filter2 = ta.barssince(priceMax) < 5 ? ta.highest(currenttrough7, 4) : na

//delayedbottom/top when oscillator bottom/top is earlier than price bottom/top
y11 = ta.valuewhen(oscMins, delayedlow, 0)
y12 = ta.valuewhen(oscMax, delayedhigh, 0)

// only take tops/bottoms in price when tops/bottoms are less than 5 bars away, since 2nd most recent top/bottom in osc
y2 = ta.valuewhen(oscMax, filter2, 1)  // identifies the highest high in the tops of price with 5 bar lookback period SINCE the SECOND most recent top in PPO
y6 = ta.valuewhen(oscMins, filter, 1)  // identifies the lowest low in the bottoms of price with 5 bar lookback period SINCE the SECOND most recent bottom in PPO

long_term_bull_filt = ta.valuewhen(priceMins, ta.lowest(div_lookback_period), 1)
long_term_bear_filt = ta.valuewhen(priceMax, ta.highest(div_lookback_period), 1)

y3 = ta.valuewhen(oscMax, currenttrough5, 0)  // identifies the value of PPO in the most recent top of PPO 
y4 = ta.valuewhen(oscMax, currenttrough5, 1)  // identifies the value of PPO in the second most recent top of PPO 

y7 = ta.valuewhen(oscMins, currenttrough4, 0)  // identifies the value of PPO in the most recent bottom of PPO
y8 = ta.valuewhen(oscMins, currenttrough4, 1)  // identifies the value of PPO in the SECOND most recent bottom of PPO

y9 = ta.valuewhen(oscMins, currenttrough6, 0)
y10 = ta.valuewhen(oscMax, currenttrough7, 0)

bulldiv = BottomPointsInPPO ? d[1] : na  // plots dots at bottoms in the PPO
beardiv = TopPointsInPPO ? d[1] : na  // plots dots at tops in the PPO

i = currenttrough5 < ta.highest(d, div_lookback_period)  // long term bearish oscilator divergence
i2 = y10 > long_term_bear_filt  // long term bearish top divergence
i3 = delayedhigh > long_term_bear_filt  // long term bearish delayedhigh divergence

i4 = currenttrough4 > ta.lowest(d, div_lookback_period)  // long term bullish osc divergence
i5 = y9 < long_term_bull_filt  // long term bullish bottom div
i6 = delayedlow < long_term_bull_filt  // long term bullish delayedbottom div


bearishdiv1 = y10 > y2 and oscMax and y3 < y4 ? true : false
bearishdiv2 = delayedhigh > y2 and y3 < y4 ? true : false
bearishdiv3 = long_term_div and oscMax and i and i2 ? true : false
bearishdiv4 = long_term_div and i and i3 ? true : false

bullishdiv1 = y9 < y6 and oscMins and y7 > y8 ? true : false
bullishdiv2 = delayedlow < y6 and y7 > y8 ? true : false
bullishdiv3 = long_term_div and oscMins and i4 and i5 ? true : false
bullishdiv4 = long_term_div and i4 and i6 ? true : false

bearish = bearishdiv1 or bearishdiv2 or bearishdiv3 or bearishdiv4
bullish = bullishdiv1 or bullishdiv2 or bullishdiv3 or bullishdiv4

greendot = beardiv != 0 ? true : false
reddot = bulldiv != 0 ? true : false

alertcondition(reddot, title='Fib Div Al', message='Fib Div AL {{ticker}}, FİYAT={{close}}')
alertcondition(greendot, title='Fib Div Sat', message='Fib Div SAT {{ticker}}, FİYAT={{close}}')


//Fiblines
len = 150
//len = input(title='Period', defval=200)
fractal_top = 0.0
fractal_top := high < high[2] and high[1] < high[2] and high[3] < high[2] and high[4] < high[2] ? high[2] : fractal_top[1]
fractal_bottom = 0.0
fractal_bottom := low > low[2] and low[1] > low[2] and low[3] > low[2] and low[4] > low[2] ? low[2] : fractal_bottom[1]

srcHigh = ta.highest(fractal_top, len)
srcLow = ta.lowest(fractal_bottom, len)
diff = srcHigh - srcLow
line0000 = srcLow
line0236 = srcLow + diff * 0.236
line0382 = srcLow + diff * 0.382
line0500 = srcLow + diff * 0.500
line0618 = srcLow + diff * 0.618
line0786 = srcLow + diff * 0.786
line1000 = srcHigh
line1272 = srcLow + diff * 1.272
line1414 = srcLow + diff * 1.414
line1618 = srcLow + diff * 1.618
line2000 = srcLow + diff * 2.000
line2272 = srcLow + diff * 2.272
line1272_2 = srcHigh - diff * 1.272
line1414_2 = srcHigh - diff * 1.414
line1618_2 = srcHigh - diff * 1.618
line2000_2 = srcHigh - diff * 2.000
line2272_2 = srcHigh - diff * 2.272

plot(line0000 and acFiboLines ? line0000 : na, title='0.000', color=color.new(#2E9AFE, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line0236 and acFiboLines ? line0236 : na, title='0.236', color=color.new(#2E9AFE, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line0382 and acFiboLines ? line0382 : na, title='0.382', color=color.new(#2E9AFE, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line0500 and acFiboLines ? line0500 : na, title='0.500', color=color.new(#2E9AFE, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line0618 and acFiboLines ? line0618 : na, title='0.618', color=color.new(#2E9AFE, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line0786 and acFiboLines ? line0786 : na, title='0.786', color=color.new(#2E9AFE, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line1000 and acFiboLines ? line1000 : na, title='1.000', color=color.new(#2E9AFE, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line1272 and acFiboLines ? line1272 : na, title='1.272', color=color.new(color.green, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line1414 and acFiboLines ? line1414 : na, title='1.414', color=color.new(color.green, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line1618 and acFiboLines ? line1618 : na, title='1.618', color=color.new(color.green, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line2000 and acFiboLines ? line2000 : na, title='2.000', color=color.new(color.green, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line2272 and acFiboLines ? line2272 : na, title='2.272', color=color.new(color.green, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line1272_2 and acFiboLines ? line1272_2 : na, title='-0.272', color=color.new(color.red, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line1414_2 and acFiboLines ? line1414_2 : na, title='-0.414', color=color.new(color.red, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line1618_2 and acFiboLines ? line1618_2 : na, title='-0.618', color=color.new(color.red, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line2000_2 and acFiboLines ? line2000_2 : na, title='-1.000', color=color.new(color.red, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)
plot(line2272_2 and acFiboLines ? line2272_2 : na, title='-1.272', color=color.new(color.red, 25), style=plot.style_cross, trackprice=true, offset=-9999, linewidth=1)


myFibKosul1 = ta.crossover(close, line0000)
myFibKosul2 = ta.crossover(close, line0236)
myFibKosul3 = ta.crossover(close, line0382)
myFibKosul4 = ta.crossover(close, line0500)
myFibKosul5 = ta.crossover(close, line0618)
myFibKosul6 = ta.crossover(close, line0786)
myFibKosul7 = ta.crossover(close, line1000)
myFibKosul8 = ta.crossover(close, line1272)
myFibKosul9 = ta.crossover(close, line1414)
myFibKosul10 = ta.crossover(close, line1618)
myFibKosul11 = ta.crossover(close, line2000)
myFibKosul12 = ta.crossover(close, line2272)
myFibKosul13 = ta.crossover(close, line1272_2)
myFibKosul14 = ta.crossover(close, line1414_2)
myFibKosul15 = ta.crossover(close, line1618_2)
myFibKosul16 = ta.crossover(close, line2000_2)
myFibKosul17 = ta.crossover(close, line2272_2)

myFibKosul1a = ta.crossunder(close, line0000)
myFibKosul2a = ta.crossunder(close, line0236)
myFibKosul3a = ta.crossunder(close, line0382)
myFibKosul4a = ta.crossunder(close, line0500)
myFibKosul5a = ta.crossunder(close, line0618)
myFibKosul6a = ta.crossunder(close, line0786)
myFibKosul7a = ta.crossunder(close, line1000)
myFibKosul8a = ta.crossunder(close, line1272)
myFibKosul9a = ta.crossunder(close, line1414)
myFibKosul10a = ta.crossunder(close, line1618)
myFibKosul11a = ta.crossunder(close, line2000)
myFibKosul12a = ta.crossunder(close, line2272)
myFibKosul13a = ta.crossunder(close, line1272_2)
myFibKosul14a = ta.crossunder(close, line1414_2)
myFibKosul15a = ta.crossunder(close, line1618_2)
myFibKosul16a = ta.crossunder(close, line2000_2)
myFibKosul17a = ta.crossunder(close, line2272_2)


myFibKosulu1 = myFibKosul1 or myFibKosul2 or myFibKosul3 or myFibKosul4 or myFibKosul5 or myFibKosul6 or myFibKosul7 or myFibKosul8 or myFibKosul9
myFibKosulu2 = myFibKosul10 or myFibKosul11 or myFibKosul12 or myFibKosul13 or myFibKosul14 or myFibKosul15 or myFibKosul16 or myFibKosul17
myFibKosulu = myFibKosulu1 or myFibKosulu2
alertcondition(myFibKosulu, title="Fib Yatay Çizgi AL", message='Fib Yatay Çizgi AL {{ticker}}, FİYAT={{close}}')

myFibKosula1 = myFibKosul1a or myFibKosul2a or myFibKosul3a or myFibKosul4a or myFibKosul5a or myFibKosul6a or myFibKosul7a or myFibKosul8a or myFibKosul9a
myFibKosula2 = myFibKosul10a or myFibKosul11a or myFibKosul12a or myFibKosul13a or myFibKosul14a or myFibKosul15a or myFibKosul16a or myFibKosul17a
myFibKosula = myFibKosula1 or myFibKosula2
alertcondition(myFibKosula, title="Fib Yatay Çizgi SAT", message='Fib Yatay Çizgi SAT {{ticker}}, FİYAT={{close}}')





//EMA9
lenEma9 = 9
//lenEma9 = input.int(9, minval=1, title="Ema Length")
outEma9 = ta.ema(close, lenEma9)
pEma9 = plot(outEma9 and acEwWma ? outEma9 : na, title="EMA9", color=color.new(color.lime, 100), offset=0, linewidth=2, style=plot.style_circles)



//WMA30
lenWma30 = 30
//lenWma30 = input.int(30, minval=1, title="Wma Length")
outWma30 = ta.wma(close, lenWma30)
pWma30 = plot(outWma30 and acEwWma ? outWma30 : na, title="WMA30", color=color.new(color.red, 100), offset=0, linewidth=2, style=plot.style_circles) 

fill(pEma9, pWma30, title = 'Trend Bölgesi', color=outEma9 >= outWma30 ? color.new(color.lime, 50) : color.new(color.red, 50))
//fill(pEma9, pWma30, color=color.new(color.lime, 75))



//EMA9 ve WMA30 Kesişmesi
ema9YukariKesWma30 = ta.crossover(outEma9, outWma30)
alertcondition(ema9YukariKesWma30, title="EW AL", message='EW AL {{ticker}}, FİYAT={{close}}')


ema9AsagiKesWma30 = ta.crossunder(outEma9, outWma30)
alertcondition(ema9AsagiKesWma30, title="EW SAT", message='EW SAT {{ticker}}, FİYAT={{close}}')



//alertcondition(ema9YukariKesWma30 or ema9AsagiKesWma30, title="EW ALSAT", message='EW ALSAT {{ticker}}, FİYAT={{close}}')

//WMA30 => close
//wma30CloseY = ta.crossover(close, outWma30)
//plotshape(wma30CloseY ,title ='W30 AL', text='W30', style=shape.triangleup, location=location.belowbar, color=color.new(color.red, 0), offset=0, size=size.small)
//alertcondition(wma30CloseY, title="W30 AL", message='W30 AL {{ticker}}, FİYAT={{close}}')

//wma30CloseA = ta.crossunder(close, outWma30)
//plotshape(wma30CloseA ,title ='W30 SAT', text='W30', style=shape.triangledown, location=location.abovebar, color=color.new(color.red, 0), offset=0, size=size.small)
//alertcondition(wma30CloseA, title="W30 SAT", message='W30 SAT {{ticker}}, FİYAT={{close}}')

//ema9 => close
//ema9CloseY = ta.crossover(close, outEma9)
//plotshape(ema9CloseY ,title ='E9 AL', text='E9', style=shape.triangleup, location=location.belowbar, color=color.new(color.lime, 0), offset=0, size=size.tiny)
//alertcondition(ema9CloseY, title="E9 AL", message='E9 AL {{ticker}}, FİYAT={{close}}')

//ema9CloseA = ta.crossunder(close, outEma9)
//plotshape(ema9CloseA ,title ='E9 SAT', text='E9', style=shape.triangledown, location=location.abovebar, color=color.new(color.lime, 0), offset=0, size=size.tiny)
//alertcondition(ema9CloseA, title="E9 SAT", message='E9 SAT {{ticker}}, FİYAT={{close}}')


//ema9 => dema200
//ema9Dema4A = ta.crossunder(outEma9, dema4)
//plotshape(ema9Dema4A ,title ='ED SAT', text='', style=shape.triangledown, location=location.abovebar, color=color.new(color.yellow, 0), offset=0, size=size.tiny)
//alertcondition(ema9Dema4A, title="ED SAT", message='ED SAT {{ticker}}, FİYAT={{close}}')

//ema9 => dema200
//ema9Dema4 = ta.crossover(outEma9, dema4)
//plotshape(ema9Dema4 ,title ='ED AL', text='', style=shape.triangleup, location=location.belowbar, color=color.new(color.yellow, 0), offset=0, size=size.tiny)
//alertcondition(ema9Dema4, title="ED AL", message='ED AL {{ticker}}, FİYAT={{close}}')

//ema9 => dema200
//ema9Dema4A = ta.crossunder(outEma9, dema4)
//plotshape(ema9Dema4A ,title ='ED SAT', text='', style=shape.triangledown, location=location.abovebar, color=color.new(color.yellow, 0), offset=0, size=size.tiny)
//alertcondition(ema9Dema4A, title="ED SAT", message='ED SAT {{ticker}}, FİYAT={{close}}')

//ema9 => dema100
//ema9Dema3 = ta.crossover(outEma9, dema3)
//plotshape(ema9Dema3 ,title ='EDC AL', text='', style=shape.triangleup, location=location.belowbar, color=color.new(color.orange, 0), offset=0, size=size.tiny)
//alertcondition(ema9Dema3, title="EDC AL", message='EDC AL {{ticker}}, FİYAT={{close}}')

//ema9 => dema100
//ema9Dema3A = ta.crossunder(outEma9, dema3)
//plotshape(ema9Dema3A ,title ='EDC SAT', text='', style=shape.triangledown, location=location.abovebar, color=color.new(color.orange, 0), offset=0, size=size.tiny)
//alertcondition(ema9Dema3A, title="EDC SAT", message='EDC SAT {{ticker}}, FİYAT={{close}}')


//DEMA Son
sartD020 = ta.crossover(close, dema1) //and close > dema1 
sartD050 = ta.crossover(close, dema2) //and close > dema2
sartD100 = ta.crossover(close, dema3) //and close > dema3
sartD200 = ta.crossover(close, dema4) //and close > dema4
sartDANY = sartD020 or sartD050 or sartD100 or sartD200
alertcondition(sartDANY, title="Temalar AL", message='Temalar AL {{ticker}}, FİYAT={{close}}')

sartD020a = ta.crossunder(close, dema1) //and close <= dema1 
sartD050a = ta.crossunder(close, dema2) //and close <= dema2
sartD100a = ta.crossunder(close, dema3) //and close <= dema3
sartD200a = ta.crossunder(close, dema4) //and close <= dema4
sartDANYa = sartD020a or sartD050a or sartD100a or sartD200a
alertcondition(sartDANYa, title="Temalar SAT", message='Temalar SAT {{ticker}}, FİYAT={{close}}')

//Tillson Plot
plot(T3 and acT3 ? T3 : na, color=color_1, linewidth=3, title='T3')

plotshape(ema9YukariKesWma30 and acEwAlSat ? ema9YukariKesWma30 : na ,title ='EW AL', text='EW', style=shape.triangleup, location=location.belowbar, color=color.new(color.lime, 0), offset=0, size=size.large)
plotshape(ema9AsagiKesWma30 and acEwAlSat ? ema9AsagiKesWma30 : na ,title ='EW SAT', text='EW', style=shape.triangledown, location=location.abovebar, color=color.new(color.red, 0), offset=0, size=size.large)

plotshape(reddot and acFibDivAlSat ? d : na, title = 'Fib Div AL', text='Fdiv', style=shape.triangleup, location=location.belowbar, color=color.new(color.lime, 0), offset=-1, size=size.large)
plotshape(greendot and acFibDivAlSat ? d : na,title ='Fib Div SAT' , text='Fdiv', style=shape.triangledown, location=location.abovebar, color=color.new(color.red, 0), offset=-1, size=size.large)

plotshape(myFibKosulu and acFibAlSat ? myFibKosulu : na ,title ='Fib Yatay Çizgi AL', text='Fçiz', style=shape.triangleup, location=location.belowbar, color=color.new(color.lime, 0), offset=0, size=size.small)
plotshape(myFibKosula and acFibAlSat ? myFibKosula : na ,title ='Fib Yatay Çizgi SAT', text='Fçiz', style=shape.triangledown, location=location.abovebar, color=color.new(color.red, 0), offset=0, size=size.small)

plotshape(myFiboKosulu and acFiboDetayAlSat ? myFiboKosulu : na ,title ='Fibo Band AL', text='Fbnd', style=shape.triangleup, location=location.belowbar, color=color.new(color.white, 0), offset=0, size=size.tiny)
plotshape(myFiboKosula and acFiboDetayAlSat ? myFiboKosula : na ,title ='Fibo Band SAT', text='Fbnd', style=shape.triangledown, location=location.abovebar, color=color.new(color.white, 0), offset=0, size=size.tiny)

plotshape(sartDANY and acTemaAlSat ? sartDANY : na ,title ='Temalar AL', text='', style=shape.triangleup, location=location.belowbar, color=color.new(color.white, 0), offset=0, size=size.tiny)
plotshape(sartDANYa and acTemaAlSat ? sartDANYa : na ,title ='Temalar SAT', text='', style=shape.triangledown, location=location.abovebar, color=color.new(color.orange, 0), offset=0, size=size.tiny)

plot(TSL and acTSL ? TSL : na, linewidth=2, color=color.new(color.orange, 0), title='TSL',  style =plot.style_circles)



///HEDEFE VARDI
